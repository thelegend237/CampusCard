-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.cards (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  userid uuid,
  studentid text NOT NULL,
  firstname text NOT NULL,
  lastname text NOT NULL,
  department text NOT NULL,
  program text NOT NULL,
  avatar text,
  issueddate timestamp with time zone NOT NULL,
  expirydate timestamp with time zone NOT NULL,
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'approved'::text, 'rejected'::text])),
  qrcode text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  dateofbirth date,
  placeofbirth text,
  CONSTRAINT cards_pkey PRIMARY KEY (id),
  CONSTRAINT cards_userid_fkey FOREIGN KEY (userid) REFERENCES public.users(id)
);
CREATE TABLE public.departments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  code text NOT NULL UNIQUE,
  programs ARRAY DEFAULT '{}'::text[],
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT departments_pkey PRIMARY KEY (id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  userid uuid,
  title text NOT NULL,
  message text NOT NULL,
  type text NOT NULL DEFAULT 'info'::text CHECK (type = ANY (ARRAY['info'::text, 'warning'::text, 'error'::text, 'success'::text])),
  read boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_userid_fkey FOREIGN KEY (userid) REFERENCES public.users(id)
);
CREATE TABLE public.payments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  userid uuid,
  cardid uuid,
  amount numeric NOT NULL,
  description text NOT NULL,
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'approved'::text, 'rejected'::text])),
  paymentmethod text,
  transactionid text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  phone text,
  CONSTRAINT payments_pkey PRIMARY KEY (id),
  CONSTRAINT payments_userid_fkey FOREIGN KEY (userid) REFERENCES public.users(id),
  CONSTRAINT payments_cardid_fkey FOREIGN KEY (cardid) REFERENCES public.cards(id)
);
CREATE TABLE public.programs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  code text NOT NULL UNIQUE,
  department_id uuid NOT NULL,
  level text NOT NULL CHECK (level = ANY (ARRAY['DUT'::text, 'BTS'::text, 'Licence'::text, 'Master'::text, 'Doctorat'::text])),
  duration integer NOT NULL DEFAULT 4 CHECK (duration > 0 AND duration <= 12),
  description text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT programs_pkey PRIMARY KEY (id),
  CONSTRAINT programs_department_id_fkey FOREIGN KEY (department_id) REFERENCES public.departments(id)
);
CREATE TABLE public.support_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  userid uuid,
  fullname text NOT NULL,
  email text NOT NULL,
  category text NOT NULL CHECK (category = ANY (ARRAY['technical'::text, 'payment'::text, 'card'::text, 'account'::text, 'general'::text, 'urgent'::text, 'bug'::text, 'feature'::text])),
  message text NOT NULL,
  response text,
  status text DEFAULT 'pending'::text,
  created_at timestamp with time zone DEFAULT now(),
  answered_at timestamp with time zone,
  subject text,
  priority text DEFAULT 'medium'::text CHECK (priority = ANY (ARRAY['low'::text, 'medium'::text, 'high'::text, 'critical'::text])),
  assigned_to text,
  tags ARRAY,
  resolved_at timestamp with time zone,
  closed_at timestamp with time zone,
  estimated_resolution_time text,
  actual_resolution_time text,
  satisfaction_rating integer CHECK (satisfaction_rating >= 1 AND satisfaction_rating <= 5),
  internal_notes text,
  CONSTRAINT support_messages_pkey PRIMARY KEY (id),
  CONSTRAINT support_messages_userid_fkey FOREIGN KEY (userid) REFERENCES public.users(id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  email text NOT NULL UNIQUE,
  role text NOT NULL DEFAULT 'student'::text CHECK (role = ANY (ARRAY['student'::text, 'admin'::text])),
  firstname text,
  lastname text,
  studentid text UNIQUE,
  department text,
  program text,
  avatar text,
  phone text,
  dateofbirth date,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  placeofbirth text,
  matricule text UNIQUE,
  password_hash character varying,
  password_changed boolean DEFAULT false,
  password_plain character varying,
  CONSTRAINT users_pkey PRIMARY KEY (id)
);